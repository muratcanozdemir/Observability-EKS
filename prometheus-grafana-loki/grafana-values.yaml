service:
  type: LoadBalancer

grafana:
  adminUser: "${GRAFANA_ADMIN_USER}"
  adminPassword: "${GRAFANA_ADMIN_PASSWORD}"

grafana.ini:
  auth.generic_oauth:
    enabled: true
    name: AzureAD
    allow_sign_up: true
    client_id: ${AZURE_AD_CLIENT_ID}
    client_secret: ${AZURE_AD_CLIENT_SECRET}
    scopes: openid email profile
    auth_url: https://login.microsoftonline.com/${AZURE_AD_TENANT_ID}/oauth2/v2.0/authorize
    token_url: https://login.microsoftonline.com/${AZURE_AD_TENANT_ID}/oauth2/v2.0/token
    api_url: https://graph.microsoft.com/oidc/userinfo
    role_attribute_path: contains(groups[?(@ == 'AdminGroup')], 'Admin') && 'Admin' || contains(groups[?(@ == 'ViewerGroup')], 'Viewer') && 'Viewer' || 'Viewer'

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
  hosts:
    - grafana.example.com
  tls:
    - secretName: grafana-tls
      hosts:
        - grafana.${var.domain_name}

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        access: proxy
        url: http://loki.monitoring:3100
        isDefault: true
